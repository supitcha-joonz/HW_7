// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProblemNotififation.Server.Data;

#nullable disable

namespace ProblemNotififation.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220616094845_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProblemNotififation.Shared.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Oioi",
                            Name = "SmartCare"
                        },
                        new
                        {
                            Id = 2,
                            Description = "oioi",
                            Name = "Tidlor"
                        });
                });

            modelBuilder.Entity("ProblemNotififation.Shared.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Problems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationId = 1,
                            Description = "Login เข้าใช้งานไม่ได้",
                            FirstName = "Supitcha",
                            LastName = "Jampathong",
                            ProblemName = "App เปิดไม่ขึ้น"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationId = 2,
                            Description = "เมื่อวานใช้งานได้ปกติ แต่วันนี้ตอนเช้า login ด้วย password ใหม่แล้วขึ้น popup error",
                            FirstName = "Joonz",
                            LastName = "OiOi",
                            ProblemName = "App เปิดไม่ขึ้น"
                        });
                });

            modelBuilder.Entity("ProblemNotififation.Shared.Problem", b =>
                {
                    b.HasOne("ProblemNotififation.Shared.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });
#pragma warning restore 612, 618
        }
    }
}
